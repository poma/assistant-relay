name: build

on:
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        -
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build client
        run: |
          cd client
          npm ci
          npm run build

      - name: Assemble release
        run: npm i fs-extra && node release.js

      - name: Create release archive
        run: zip release

      - name: Set version var
        id: vars
        run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/tags/v})"

      - name: Check that package.json version matches tag
        run: |
          [ ${{ steps.vars.outputs.version }} = $(grep '"version":' release/package.json | grep -o "[0-9.]*") ] || (echo "Git tag doesn't match version in package.json" && false)

      - name: Build and push Docker image
        uses: docker/build-push-action@v1.1.0
        with:
          path: release
          dockerfile: Dockerfile
          repository: poma/assistant-relay
          tags: latest
          tag_with_ref: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create GitHub Release Draft
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.vars.outputs.version }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release Draft
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
